@model MVCStudentManagementCRUD.Models.Degrees.DegreeBO
@{
    Layout = null;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Fill Degree Details</h2>
    <a class="btn btn-outline-danger" style="margin-top:1%" onclick="SwitchView('@Url.Action("DegreeList", "Degree")')"><i class="fa fa-mail-reply"></i> Return to Degree List</a>
</div>

@using (Html.BeginForm("Upsert", "Degree", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.Id)
    <div class="container-fluid">
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="form-group mt-1">
                @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.DepartmentId, (IEnumerable<SelectListItem>)ViewBag.DepartmentOptions, "Select Department", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId)
            </div>
        </div>
        <div class="form-group text-center mt-3">
            <input type="submit" value="Save" class="btn btn-success" />
             <input type="reset" value="Reset" class="btn btn-warning" />
         </div>
    </div>
}
