@model MVCStudentManagementCRUD.Models.Student
@{
    Layout = null;
}
@using (Html.BeginForm("CreateOrUpdate", "Student", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })
        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MiddleName)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PreferredName, new { @class = "control-label" })
        @Html.EditorFor(model => model.PreferredName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PreferredName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, new { @class = "control-label" })
        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date" } })
        @*@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "date", min="1970-01-01", max="2009-01-01" } })*@
        @Html.ValidationMessageFor(model => model.DateOfBirth)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Degree, new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Degree, (IEnumerable<SelectListItem>)ViewBag.DegreeOptions, "Select Degree", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Degree)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "control-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Phone, new { @class = "control-label" })
        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Phone)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Address, new { @class = "control-label" })
        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Address)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewBag.GenderOptions, "Select Gender", new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Ethnicity, new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Ethnicity, (IEnumerable<SelectListItem>)ViewBag.EthnicityOptions, "Select Ethnicity", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Ethnicity)
    </div>
    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-success" />
        <input type="reset" value="Reset" class="btn btn-warning" />
    </div>

}
